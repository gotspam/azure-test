{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
	"contentVersion": "1.2.0.0",
	"parameters": {
		"templateBaseUrl": {
			"defaultValue": "https://raw.githubusercontent.com/gotspam/f5-azure-arm-templates-v2/",
			"metadata": {
				"description": "The publicly accessible URL where the linked ARM templates are located."
			},
			"type": "string"
		},
		"artifactLocation": {
			"defaultValue": "main/examples/",
			"metadata": {
				"description": "The directory, relative to the templateBaseUrl, where the modules folder is located."
			},
			"type": "string"
		},
		"uniqueString": {
			"defaultValue": "",
			"metadata": {
				"description": "A prefix that will be used to name template resources. Because some resources require globally unique names, we recommend using a unique value."
			},
			"type": "string"
		},
		"sshKey": {
			"metadata": {
				"description": "Supply the public key that will be used for SSH authentication to the BIG-IP and application virtual machines."
			},
			"type": "string"
		},
		"newPassword": {
			"defaultValue": "",
			"metadata": {
				"description": "The new password to be used for the admin user on the BIG-IP instances. This is required for creating the AZURE_PASSWORD secret referenced in the runtimeConfig template parameter."
			},
			"type": "securestring"
		},
		"appContainer": {
			"defaultValue": "",
			"metadata": {
				"description": "The docker container to use when deploying the example application."
			},
			"type": "string"
		},
		"cloudInitDeliveryLocation": {
			"defaultValue": "https://raw.githubusercontent.com/gotspam/f5-azure-arm-templates-v2/main/examples/modules/application/scripts/cloud-init.txt",
			"metadata": {
				"description": "URI to cloud init file used for customizing VM"
			},
			"type": "string"
		},
		"restrictedSrcMgmtAddress": {
			"defaultValue": "",
			"metadata": {
				"description": "When creating management security group, this field restricts management access to a specific network or address. Enter an IP address or address range in CIDR notation, or asterisk for all sources."
			},
			"type": "string"
		},
		"runtimeConfig": {
			"defaultValue": "https://raw.githubusercontent.com/gotspam/f5-azure-arm-templates-v2/main/examples/standalone/bigip-configurations/runtime-init-conf-payg.yaml",
			"metadata": {
				"description": "Supply a URL to the bigip-runtime-init configuration file in YAML or JSON format, or an escaped JSON string to use for f5-bigip-runtime-init configuration."
			},
			"type": "string"
		},
		"useAvailabilityZones": {
			"defaultValue": true,
			"metadata": {
				"description": "This deployment can deploy resources into Azure Availability Zones (if the region supports it).  If that is not desired the input should be set 'No'. If the region does not support availability zones the input should be set to No."
			},
			"type": "bool"
		},
		"tagValues": {
			"defaultValue": {
				"application": "APP",
				"cost": "COST",
				"environment": "ENV",
				"group": "GROUP",
				"owner": "OWNER"
			},
			"metadata": {
				"description": "Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
			},
			"type": "object"
		},
		"zoneChoice": {
			"defaultValue": "1",
			"metadata": {
				"description": "If you want the VM placed in an Azure Availability Zone, and the Azure region you are deploying to supports it, specify the number of the existing Availability Zone you want to use."
			},
			"allowedValues": [
				"1",
				"2",
				"3"
			],
			"type": "string"
		}
    },
	"variables": {
        "deploymentApiVersion": "2019-05-10",
		"contentVersion": "[deployment().properties.template.contentVersion]",
        "uniqueString": "[toLower(parameters('uniqueString'))]",
		"adminUsername": "azureuser",

		"assignManagedIdentity": "[or(not(empty(parameters('newPassword'))), not(empty(variables('customAutoscaleRules'))))]",
		"builtInRoleType": "Contributor",
		"customRoleAssignableScopes": [],
		"customRoleDescription": "",
		"customRoleName": "",
		"customRolePermissions": [],
		"keyVaultName": "[concat(variables('uniqueString'), 'sv')]",
		"keyVaultPermissionsKeys": ["get","list"],
		"keyVaultPermissionsSecrets": ["get","list"],
		"secretName": "mySecret",
		"userAssignedIdentityName": "[concat(variables('uniqueString'), '-secretIdentity')]",

		"numSubnets": 2,
		"provisionPublicIPNetwork": true,
		"restrictedSrcMgmtPort": "8443",
		"virtualNetworkName": "[concat(variables('uniqueString'), '-vnet')]",
		"vnetAddressPrefix": "10.0",

		"nsg0": [{"destinationPortRanges":["22","8443"],"sourceAddressPrefix":"[parameters('restrictedSrcMgmtAddress')]"},{"destinationPortRanges":["80","443"],"sourceAddressPrefix":"*"}],
		"nsg1": [{"destinationPortRanges":["80","443"],"sourceAddressPrefix":"*"}],
		"nsg2": [],
		"numberPublicExternalIPAddresses": 1,
		"numberPublicMgmtIPAddresses": 0,

		"provisionApp": "[not(empty(parameters('cloudInitDeliveryLocation')))]",
		"appInstanceName": "appvm01",
		"appInstanceType": "Standard_D2s_v3",

		"appInsights": "[concat(variables('uniqueString'), '-insights')]",
		"appInsightsId": "[resourceId('Microsoft.Insights/components', variables('appInsights'))]",
		"customEmail": [],
		"image": "f5-networks:f5-big-ip-best:f5-bigip-virtual-edition-25m-best-hourly:15.1.201000",
		"instanceType": "Standard_DS4_v2",
		"roleDefinitionId": "",
		"vmName": "[concat(variables('uniqueString'), '-vm')]"
    },
	"resources": [
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[variables('deploymentApiVersion')]",
			"condition": "[variables('assignManagedIdentity')]",
			"name": "accessTemplate",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/access/access.json')]",
					"contentVersion": "[variables('contentVersion')]"
				},
				"parameters": {
					"builtInRoleType":{ "value": "[variables('builtInRoleType')]" },
					"customRoleAssignableScopes":{ "value": "[variables('customRoleAssignableScopes')]" },
					"customRoleDescription":{ "value": "[variables('customRoleDescription')]" },
					"customRoleName":{ "value": "[variables('customRoleName')]" },
					"customRolePermissions":{ "value": "[variables('customRolePermissions')]" },
					"keyVaultName":{ "value": "[variables('keyVaultName')]" },
					"keyVaultPermissionsKeys":{ "value": "[variables('keyVaultPermissionsKeys')]" },
					"keyVaultPermissionsSecrets":{ "value": "[variables('keyVaultPermissionsSecrets')]" },
					"secretName":{ "value": "[variables('secretName')]" },
					"secretValue":{ "value": "[parameters('newPassword')]" },
					"userAssignedIdentityName":{ "value": "[variables('userAssignedIdentityName')]" },
					"tagValues":{ "value": "[parameters('tagValues')]" }
				}
			}
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[variables('deploymentApiVersion')]",
			"name": "networkTemplate",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/network/network.json')]",
					"contentVersion": "[variables('contentVersion')]"
				},
				"parameters": {
					"numSubnets":{ "value": "[variables('numSubnets')]" },
					"virtualNetworkName":{ "value": "[variables('virtualNetworkName')]" },
					"vnetAddressPrefix":{ "value": "[variables('vnetAddressPrefix')]" },					
					"tagValues":{ "value": "[parameters('tagValues')]" }
				}
			}
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[variables('deploymentApiVersion')]",
			"name": "publicIpTemplate",
			"dependsOn": [
				"networkTemplate"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/publicip/publicip.json')]",
					"contentVersion": "[variables('contentVersion')]"
				},
				"parameters": {
					"dnsLabel":{ "value": "[variables('uniqueString')]" },
					"nsg0":{ "value": "[variables('nsg0')]" },
					"nsg1":{ "value": "[variables('nsg1')]" },
					"nsg2":{ "value": "[variables('nsg2')]" },
					"numberPublicExternalIPAddresses":{ "value": "[variables('numberPublicExternalIPAddresses')]" },
					"numberPublicMgmtIPAddresses":{ "value": "[variables('numberPublicMgmtIPAddresses')]" },
					"tagValues":{ "value": "[parameters('tagValues')]" }
				}
			}
		},
		{
			"type": "Microsoft.Resources/deployments",
			"condition": "[variables('provisionApp')]",
			"apiVersion": "[variables('deploymentApiVersion')]",
			"name": "appTemplate",
			"dependsOn": [
				"networkTemplate"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/application/application.json')]",
					"contentVersion": "[variables('contentVersion')]"
				},
				"parameters": {
					"adminUsername":{ "value": "[variables('adminUsername')]" },
					"sshKey":{ "value": "[parameters('sshKey')]" },
					"instanceName":{ "value": "[variables('appInstanceName')]" },
					"instanceType":{ "value": "[variables('appInstanceType')]" },
					"subnetId":{ "value": "[reference('networkTemplate').outputs.subnets.value[1]]" },
					"nsgId":{ "value": "[reference('publicIpTemplate').outputs.nsg1Id.value]" },
					"appContainer":{ "value": "[parameters('appContainer')]" },
					"cloudInitDeliveryLocation":{ "value": "[parameters('cloudInitDeliveryLocation')]" },
					"tagValues":{ "value": "[parameters('tagValues')]" }
				}
			}
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[variables('deploymentApiVersion')]",
			"name": "bigipTemplate",
			"dependsOn": [
				"accessTemplate",
				"networkTemplate",
				"publicIpTemplate"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/bigip-standalone/bigip.json')]",
					"contentVersion": "[variables('contentVersion')]"
				},
				"parameters": {
					"adminUsername":{ "value": "[variables('adminUsername')]" },
					"appInsights":{ "value": "[variables('appInsights')]" },
					"customEmail":{ "value": "[variables('customEmail')]" },
					"dnsLabel":{ "value": "[variables('uniqueString')]" },
					"image":{ "value": "[variables('image')]" },
					"instanceType":{ "value": "[variables('instanceType')]" },
					"nsgId":{ "value": "[reference('publicIpTemplate').outputs.nsg0Id.value]" },
					"publicIPAddressId":{ "value": "[first(reference('publicIpTemplate').outputs.externalIpIds.value)]" },
					"roleDefinitionId":{ "value": "[variables('roleDefinitionId')]" },
					"runtimeConfig":{ "value": "[parameters('runtimeConfig')]" },
					"sshKey":{ "value": "[parameters('sshKey')]" },
					"subnetId":{ "value": "[reference('networkTemplate').outputs.subnets.value[0]]" },
					"tagValues":{ "value": "[parameters('tagValues')]" },
					"useAvailabilityZones":{ "value": "[parameters('useAvailabilityZones')]" },
					"userAssignManagedIdentity":{ "value": "[if(variables('assignManagedIdentity'), reference('accessTemplate').outputs.userAssignedIdentityId.value, '')]" },
					"vmName":{ "value": "[variables('vmName')]" },
					"zoneChoice":{ "value": "[parameters('zoneChoice')]" }
				}
			}
		}
	],
	"outputs": {
		"virtualNetworkId": {
            "type": "String",
            "value": "[reference('networkTemplate').outputs.virtualNetwork.value]"
        },
		"appVmName": {
			"condition": "[variables('provisionApp')]",
            "type": "String",
            "value": "[variables('appInstanceName')]"
        },
		"appPublicIps": {
			"condition": "[variables('provisionApp')]",
            "type": "array",
            "value": "[reference('publicIpTemplate').outputs.externalIps.value]"
        },
		"appPrivateIp": {
			"condition": "[variables('provisionApp')]",
            "type": "String",
            "value": "[reference('appTemplate').outputs.appIp.value]"
        },
		"appUsername": {
			"condition": "[variables('provisionApp')]",
            "type": "String",
            "value": "[variables('adminUsername')]"
        },
		"vmId": {
            "type": "String",
            "value": "[reference('bigipTemplate').outputs.vmId.value]"
        },		
		"bigipUsername": {
            "type": "String",
            "value": "[variables('adminUsername')]"
        },
		"bigipPassword": {
			"condition": "[not(empty(parameters('newPassword')))]",
            "type": "String",
            "value": "[parameters('newPassword')]"
        }
	}
}